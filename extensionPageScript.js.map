{"version":3,"file":"extensionPageScript.js","mappings":"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","sources":["webpack://mytonwallet/webpack/runtime/chunk loaded","webpack://mytonwallet/./src/api/providers/extension/config.ts","webpack://mytonwallet/./src/config.ts","webpack://mytonwallet/./src/lib/webextension-polyfill/index.ts","webpack://mytonwallet/./src/util/PostMessageConnector.ts","webpack://mytonwallet/./src/util/generateUniqueId.ts","webpack://mytonwallet/./src/api/providers/extension/connectorForPageScript.ts","webpack://mytonwallet/./src/util/logs.ts","webpack://mytonwallet/./src/extension/pageScript/deeplinkHook.ts","webpack://mytonwallet/./src/extension/pageScript/tonMagic.ts","webpack://mytonwallet/./node_modules/@tonconnect/protocol/lib/esm/index.mjs","webpack://mytonwallet/./src/util/tonConnectEnvironment.ts","webpack://mytonwallet/./src/extension/pageScript/TonConnect.ts","webpack://mytonwallet/./src/util/callbacks.ts","webpack://mytonwallet/./src/extension/pageScript/TonProvider.ts","webpack://mytonwallet/./src/extension/pageScript/index.ts","webpack://mytonwallet/./node_modules/tweetnacl-util/nacl-util.js","webpack://mytonwallet/webpack/bootstrap","webpack://mytonwallet/webpack/runtime/hasOwnProperty shorthand","webpack://mytonwallet/webpack/runtime/jsonp chunk loading","webpack://mytonwallet/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","export const POPUP_PORT = 'MyTonWallet_popup';\nexport const CONTENT_SCRIPT_PORT = 'MyTonWallet_contentScript';\nexport const PAGE_CONNECTOR_CHANNEL = 'MyTonWallet_pageConnector';\n","import type { LangItem } from './global/types';\n\nexport const APP_NAME = process.env.APP_NAME || 'MyTonWallet';\nexport const APP_VERSION = process.env.APP_VERSION!;\n\nexport const DEBUG = (\n  process.env.APP_ENV !== 'production' && process.env.APP_ENV !== 'perf' && process.env.APP_ENV !== 'test'\n);\nexport const DEBUG_MORE = false;\n\nexport const IS_MOCKED_CLIENT = process.env.APP_MOCKED_CLIENT === '1';\nexport const IS_TEST = process.env.APP_ENV === 'test';\nexport const IS_PERF = process.env.APP_ENV === 'perf';\nexport const IS_ELECTRON = process.env.IS_ELECTRON;\nexport const IS_SSE_SUPPORTED = IS_ELECTRON;\n\nexport const ELECTRON_HOST_URL = 'https://dumb-host';\nexport const INACTIVE_MARKER = '[Inactive]';\n\nexport const DEBUG_ALERT_MSG = 'Shoot!\\nSomething went wrong, please see the error details in Dev Tools Console.';\n\nexport const MNEMONIC_COUNT = 24;\nexport const MNEMONIC_CHECK_COUNT = 3;\n\nexport const MOBILE_SCREEN_MAX_WIDTH = 700; // px\n\nexport const ANIMATION_END_DELAY = 50;\n\nexport const ANIMATED_STICKER_SMALL_SIZE_PX = 110;\nexport const ANIMATED_STICKER_MIDDLE_SIZE_PX = 120;\nexport const ANIMATED_STICKER_DEFAULT_PX = 150;\nexport const ANIMATED_STICKER_BIG_SIZE_PX = 156;\n\nexport const DEFAULT_PRICE_CURRENCY = '$';\nexport const CARD_SECONDARY_VALUE_SYMBOL = 'TON';\n\nexport const DEFAULT_LANDSCAPE_ACTION_TAB_ID = 1;\n\nexport const DEFAULT_DECIMAL_PLACES = 9;\n\nexport const TOKEN_INFO = {\n  toncoin: {\n    name: 'Toncoin',\n    symbol: CARD_SECONDARY_VALUE_SYMBOL,\n    slug: 'toncoin',\n    quote: {\n      price: 1.95,\n      percentChange1h: 0,\n      percentChange24h: 0,\n      percentChange7d: 0,\n      percentChange30d: 0,\n    },\n    decimals: DEFAULT_DECIMAL_PLACES,\n  },\n};\n\nexport const GLOBAL_STATE_CACHE_DISABLED = false;\nexport const GLOBAL_STATE_CACHE_KEY = 'mytonwallet-global-state';\n\nexport const ANIMATION_LEVEL_MIN = 0;\nexport const ANIMATION_LEVEL_MED = 1;\nexport const ANIMATION_LEVEL_MAX = 2;\nexport const ANIMATION_LEVEL_DEFAULT = ANIMATION_LEVEL_MAX;\nexport const THEME_DEFAULT = 'system';\n\nexport const MAIN_ACCOUNT_ID = '0-ton-mainnet';\n\nexport const TONHTTPAPI_MAINNET_URL = process.env.TONHTTPAPI_MAINNET_URL || 'https://toncenter.com/api/v2/jsonRPC';\nexport const TONHTTPAPI_MAINNET_API_KEY = (IS_ELECTRON && process.env.ELECTRON_TONHTTPAPI_MAINNET_API_KEY)\n  || process.env.TONHTTPAPI_MAINNET_API_KEY;\nexport const TONHTTPAPI_TESTNET_URL = process.env.TONHTTPAPI_TESTNET_URL\n  || 'https://testnet.toncenter.com/api/v2/jsonRPC';\nexport const TONHTTPAPI_TESTNET_API_KEY = (IS_ELECTRON && process.env.ELECTRON_TONHTTPAPI_TESTNET_API_KEY)\n  || process.env.TONHTTPAPI_TESTNET_API_KEY;\nexport const BRILLIANT_API_BASE_URL = process.env.BRILLIANT_API_BASE_URL || 'https://mytonwallet-api.herokuapp.com';\n\nexport const FRACTION_DIGITS = 9;\nexport const SHORT_FRACTION_DIGITS = 2;\n\nexport const MY_TON_WALLET_PROMO_URL = 'https://mytonwallet.io';\nexport const TELEGRAM_WEB_URL = 'https://web.telegram.org/a/';\nexport const TONSCAN_BASE_MAINNET_URL = 'https://tonscan.org/';\nexport const TONSCAN_BASE_TESTNET_URL = 'https://testnet.tonscan.org/';\nexport const GETGEMS_BASE_MAINNET_URL = 'https://getgems.io/';\nexport const GETGEMS_BASE_TESTNET_URL = 'https://testnet.getgems.io/';\n\nexport const TON_TOKEN_SLUG = 'toncoin';\n\nexport const PROXY_HOSTS = process.env.PROXY_HOSTS;\n\nexport const TINY_TRANSFER_MAX_AMOUNT = 0.01;\n\nexport const LANG_CACHE_NAME = 'mtw-lang-15';\n\nexport const LANG_LIST: LangItem[] = [{\n  langCode: 'en',\n  name: 'English',\n  nativeName: 'English',\n  rtl: false,\n}, {\n  langCode: 'es',\n  name: 'Spanish',\n  nativeName: 'Español',\n  rtl: false,\n}, {\n  langCode: 'ru',\n  name: 'Russian',\n  nativeName: 'Русский',\n  rtl: false,\n}, {\n  langCode: 'zh-Hans',\n  name: 'Chinese (Simplified)',\n  nativeName: '繁体',\n  rtl: false,\n}, {\n  langCode: 'zh-Hant',\n  name: 'Chinese (Traditional)',\n  nativeName: '繁體',\n  rtl: false,\n}];\n\nexport const STAKING_CYCLE_DURATION_MS = 129600000; // 36 hours\nexport const MIN_BALANCE_FOR_UNSTAKE = 1.02;\n\nexport const STAKING_POOLS = process.env.STAKING_POOLS ? process.env.STAKING_POOLS.split(' ') : [];\n","import type { Browser } from 'webextension-polyfill';\n\n// eslint-disable-next-line global-require\nconst browser = require('./browser') as Browser;\n\nexport default browser;\n","import type { Runtime } from 'webextension-polyfill';\nimport extension from '../lib/webextension-polyfill';\n\nimport generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n  acceptsBuffer?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker | Window | Runtime.Port,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n    private targetOrigin = '*',\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    if (this.target === window) {\n      this.target.postMessage(data, this.targetOrigin);\n    } else {\n      this.target.postMessage(data);\n    }\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker | Window,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n  targetOrigin?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel, targetOrigin);\n\n  function handleMessage({ data }: WorkerMessageEvent | MessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage as any); // TS weirdly complains here\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage as any);\n  };\n\n  return connector;\n}\n\nexport function createExtensionConnector(\n  name: string,\n  onUpdate?: (update: ApiUpdate) => void,\n  getInitArgs?: () => any,\n  channel?: string,\n) {\n  const connector = new ConnectorClass(connect(), onUpdate, channel);\n\n  function connect() {\n    // eslint-disable-next-line no-restricted-globals\n    const port = extension.runtime.connect({ name });\n\n    port.onMessage.addListener((data: WorkerMessageData) => {\n      connector.onMessage(data);\n    });\n\n    // For some reason port can suddenly get disconnected\n    port.onDisconnect.addListener(() => {\n      connector.target = connect();\n      connector.init(getInitArgs?.());\n    });\n\n    return port;\n  }\n\n  connector.init(getInitArgs?.());\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","export default function generateUniqueId() {\n  return Date.now().toString(36) + Math.random().toString(36).slice(2);\n}\n","import type { OnApiDappUpdate } from '../../types/dappUpdates';\nimport type {\n  DappMethodResponse, DappMethods, LegacyDappMethodResponse,\n  LegacyDappMethods,\n} from '../../dappMethods/types';\n\nimport { PAGE_CONNECTOR_CHANNEL } from './config';\nimport { logDebugError } from '../../../util/logs';\nimport type { Connector } from '../../../util/PostMessageConnector';\nimport { createConnector } from '../../../util/PostMessageConnector';\n\nlet connector: Connector;\n\ntype Methods = DappMethods & LegacyDappMethods;\ntype MethodResponse<T extends keyof Methods> = (\n  T extends keyof DappMethods\n    ? DappMethodResponse<T>\n    : T extends keyof LegacyDappMethods\n      ? LegacyDappMethodResponse<T>\n      : never\n  );\n\nexport function initApi(onUpdate: OnApiDappUpdate) {\n  connector = createConnector(window, onUpdate, PAGE_CONNECTOR_CHANNEL, window.location.href);\n  return connector;\n}\n\nexport function callApi<T extends keyof Methods>(methodName: T, ...args: any[]) {\n  if (!connector) {\n    logDebugError('API is not initialized');\n    return undefined;\n  }\n\n  const promise = connector.request({\n    name: methodName,\n    args,\n  });\n\n  return promise as MethodResponse<T>;\n}\n","import { DEBUG } from '../config';\n\nexport function logDebugError(message: string, ...args: any[]) {\n  if (DEBUG) {\n    // eslint-disable-next-line no-console\n    console.error(`[DEBUG][${message}]`, ...args);\n  }\n}\n\nexport function logDebug(message: any, ...args: any[]) {\n  if (DEBUG) {\n    // eslint-disable-next-line no-console\n    console.log('[DEBUG]', message, ...args);\n  }\n}\n","import { callApi } from '../../api/providers/extension/connectorForPageScript';\n\nconst originalOpenFn = window.open;\nlet isDeeplinkHookEnabled: boolean | undefined;\n\nexport function doDeeplinkHook(isTurnedOn: boolean) {\n  if (isTurnedOn === Boolean(isDeeplinkHookEnabled)) {\n    return;\n  }\n\n  if (isTurnedOn) {\n    window.addEventListener('click', clickHandler, false);\n    window.open = patchedOpenFn;\n  } else {\n    window.removeEventListener('click', clickHandler);\n    window.open = originalOpenFn;\n  }\n\n  isDeeplinkHookEnabled = isTurnedOn;\n}\n\nfunction clickHandler(e: MouseEvent) {\n  const linkEl = (e.target as HTMLElement)?.closest('a');\n\n  if (linkEl && tryHandleDeeplink(linkEl.href)) {\n    e.preventDefault();\n  }\n}\n\nfunction patchedOpenFn(url?: string | URL, ...args: any[]) {\n  if (tryHandleDeeplink(url)) {\n    // eslint-disable-next-line no-null/no-null\n    return null;\n  }\n  return originalOpenFn(url, ...args);\n}\n\nfunction tryHandleDeeplink(value: any) {\n  if (typeof value !== 'string' || !value.startsWith('ton://transfer/')) {\n    return false;\n  }\n\n  try {\n    const url = new URL(value);\n    const params = {\n      to: url.pathname.replace('//transfer/', ''),\n      amount: url.searchParams.get('amount'),\n      text: url.searchParams.get('text'),\n    };\n    void callApi('prepareTransaction', {\n      to: params.to,\n      amount: params.amount,\n      comment: params.text,\n    });\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n","import { TELEGRAM_WEB_URL } from '../../config';\n\nexport async function doTonMagic(isEnabled: boolean, cb: NoneToVoidFunction) {\n  if (!window.location.href.startsWith(TELEGRAM_WEB_URL)) {\n    if (window.location.href.startsWith('https://web.telegram.org/k/')) {\n      toggleMagicBadge(isEnabled);\n    }\n\n    return;\n  }\n\n  if (isEnabled) {\n    const scriptEl = document.querySelector('script[src^=\"main.\"]')!;\n    const localRevision = scriptEl.getAttribute('src')!;\n\n    const filesToInjectResponse = await fetch(`https://ton.org/app/magic-sources.json?${Date.now()}`);\n    const filesToInject = await filesToInjectResponse.json();\n    const magicRevision = filesToInject.find((f: string) => f.startsWith('main.') && f.endsWith('.js'));\n\n    const assetCache = await window.caches.open('tt-assets');\n    const cachedResponse = await assetCache.match(localRevision);\n    if (cachedResponse) {\n      const cachedText = await cachedResponse.text();\n      // we leverage the fact that the file has its name as part of the sourcemaps appendix\n      const isMagicInjected = cachedText?.endsWith(`${magicRevision}.map`);\n      if (isMagicInjected) {\n        return;\n      }\n    }\n\n    addBadge('Loading <b>TON magic</b>...');\n\n    const responses = await Promise.all(filesToInject.map(async (fileName: string) => {\n      const res = await fetch(`https://ton.org/app/${fileName}`);\n\n      if (res.status !== 200) {\n        throw new Error(`[TON Wallet] Failed to load magic: ${res.statusText}. File: ${fileName}`);\n      }\n\n      return [\n        fileName,\n        new Response(await res.blob(), {\n          headers: res.headers,\n          status: res.status,\n          statusText: res.statusText,\n        }),\n      ];\n    }));\n\n    await Promise.all(responses.map(async ([fileName, response]) => {\n      if (fileName.startsWith('main.')) {\n        if (fileName.endsWith('.js')) {\n          await assetCache.put(`${TELEGRAM_WEB_URL}${localRevision}`, response.clone());\n        } else if (fileName.endsWith('.css')) {\n          const linkEl = document.querySelector('link[rel=stylesheet]')!;\n          const currentCssRevision = linkEl.getAttribute('href');\n          await assetCache.put(`${TELEGRAM_WEB_URL}${currentCssRevision}`, response.clone());\n        }\n      } else {\n        await assetCache.put(`${TELEGRAM_WEB_URL}${fileName}`, response.clone());\n      }\n    }));\n\n    localStorage.setItem('ton:magicRevision', magicRevision);\n  } else {\n    const prevMagicRevision = localStorage.getItem('ton:magicRevision');\n    if (!prevMagicRevision) {\n      return;\n    }\n\n    localStorage.removeItem('ton:magicRevision');\n    await window.caches.delete('tt-assets');\n  }\n\n  cb();\n}\n\nfunction toggleMagicBadge(isTurnedOn?: boolean) {\n  const columnLeft = document.getElementById('column-left');\n  const columnCenter = document.getElementById('column-center');\n\n  if (isTurnedOn) {\n    addBadge('Switch to <b>Z version</b> in the menu to take advantage of <b>TON magic</b>.');\n\n    // handle shallow screen layout\n    if (columnLeft) {\n      columnLeft.style.top = '28px';\n    }\n    if (columnCenter) {\n      columnCenter.style.top = '28px';\n    }\n  } else {\n    const badge = document.getElementById('ton-magic-badge');\n    if (badge) {\n      badge.remove();\n      if (columnLeft) {\n        columnLeft.style.top = '';\n      }\n      if (columnCenter) {\n        columnCenter.style.top = '';\n      }\n    }\n  }\n}\n\nfunction addBadge(html: string) {\n  const badge = document.createElement('div');\n  badge.id = 'ton-magic-badge';\n  badge.style.position = 'fixed';\n  badge.style.zIndex = '999';\n  badge.style.top = '0';\n  badge.style.background = '#3390ec';\n  badge.style.width = '100%';\n  badge.style.height = '28px';\n  badge.style.lineHeight = '28px';\n  badge.style.textAlign = 'center';\n  badge.style.fontSize = '14px';\n  badge.style.fontFamily = 'system-ui, -apple-system, \"system-ui\", \"Helvetica Neue\", sans-serif';\n  badge.style.color = 'white';\n  badge.innerHTML = html;\n  document.body.prepend(badge);\n}\n","import nacl from 'tweetnacl-util';\nimport nacl$1 from 'tweetnacl';\n\nvar CONNECT_EVENT_ERROR_CODES;\n(function (CONNECT_EVENT_ERROR_CODES) {\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_NOT_FOUND_ERROR\"] = 2] = \"MANIFEST_NOT_FOUND_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_CONTENT_ERROR\"] = 3] = \"MANIFEST_CONTENT_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_EVENT_ERROR_CODES || (CONNECT_EVENT_ERROR_CODES = {}));\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (CONNECT_ITEM_ERROR_CODES = {}));\n\nvar SEND_TRANSACTION_ERROR_CODES;\n(function (SEND_TRANSACTION_ERROR_CODES) {\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SEND_TRANSACTION_ERROR_CODES || (SEND_TRANSACTION_ERROR_CODES = {}));\n\nvar SIGN_DATA_ERROR_CODES;\n(function (SIGN_DATA_ERROR_CODES) {\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SIGN_DATA_ERROR_CODES || (SIGN_DATA_ERROR_CODES = {}));\n\nvar DISCONNECT_ERROR_CODES;\n(function (DISCONNECT_ERROR_CODES) {\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(DISCONNECT_ERROR_CODES || (DISCONNECT_ERROR_CODES = {}));\n\nvar CHAIN;\n(function (CHAIN) {\n    CHAIN[\"MAINNET\"] = \"-239\";\n    CHAIN[\"TESTNET\"] = \"-3\";\n})(CHAIN || (CHAIN = {}));\n\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = nacl.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return nacl.decodeBase64(value);\n}\nfunction encode(value, urlSafe = false) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        uint8Array = nacl.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction decode(value, urlSafe = false) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return nacl.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return JSON.parse(nacl.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nconst Base64 = {\n    encode,\n    decode\n};\n\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\n\nfunction isNode() {\n    return (typeof process !== 'undefined' && process.versions != null && process.versions.node != null);\n}\n\nclass SessionCrypto {\n    constructor(keyPair) {\n        this.nonceLength = 24;\n        this.keyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n        this.sessionId = toHexString(this.keyPair.publicKey);\n    }\n    createKeypair() {\n        return nacl$1.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: hexToByteArray(keyPair.publicKey),\n            secretKey: hexToByteArray(keyPair.secretKey)\n        };\n    }\n    createNonce() {\n        return nacl$1.randomBytes(this.nonceLength);\n    }\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = nacl$1.box(encodedMessage, nonce, receiverPublicKey, this.keyPair.secretKey);\n        return concatUint8Arrays(nonce, encrypted);\n    }\n    decrypt(message, senderPublicKey) {\n        const [nonce, internalMessage] = splitToUint8Arrays(message, this.nonceLength);\n        const decrypted = nacl$1.box.open(internalMessage, nonce, senderPublicKey, this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${this.keyPair.publicKey.toString()} \\n keypair secretkey: ${this.keyPair.secretKey.toString()}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: toHexString(this.keyPair.publicKey),\n            secretKey: toHexString(this.keyPair.secretKey)\n        };\n    }\n}\n\nexport { Base64, CHAIN, CONNECT_EVENT_ERROR_CODES, CONNECT_ITEM_ERROR_CODES, DISCONNECT_ERROR_CODES, SEND_TRANSACTION_ERROR_CODES, SIGN_DATA_ERROR_CODES, SessionCrypto, concatUint8Arrays, hexToByteArray, isNode, splitToUint8Arrays, toHexString };\n//# sourceMappingURL=index.mjs.map\n","import type { DeviceInfo } from '@tonconnect/protocol';\n\nimport packageJson from '../../package.json';\n\ntype DevicePlatform = DeviceInfo['platform'];\n\nexport const TONCONNECT_VERSION = 2;\n\nexport function tonConnectGetDeviceInfo(): DeviceInfo {\n  return {\n    platform: getPlatform()!,\n    appName: 'MyTonWallet',\n    appVersion: packageJson.version,\n    maxProtocolVersion: TONCONNECT_VERSION,\n    features: [\n      'SendTransaction', // TODO DEPRECATED\n      { name: 'SendTransaction', maxMessages: 4 },\n    ],\n  };\n}\n\nfunction getPlatform(): DevicePlatform {\n  const { userAgent, platform } = window.navigator;\n\n  const macosPlatforms = ['macOS', 'Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'];\n  const windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'];\n  const iphonePlatforms = ['iPhone'];\n  const ipadPlatforms = ['iPad', 'iPod'];\n\n  let os: DevicePlatform | undefined;\n\n  if (macosPlatforms.indexOf(platform) !== -1) {\n    os = 'mac';\n  } else if (iphonePlatforms.indexOf(platform) !== -1) {\n    os = 'iphone';\n  } else if (ipadPlatforms.indexOf(platform) !== -1) {\n    os = 'ipad';\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    os = 'windows';\n  } else if (/Android/.test(userAgent)) {\n    os = 'linux';\n  } else if (/Linux/.test(platform)) {\n    os = 'linux';\n  }\n\n  return os!;\n}\n","import type {\n  AppRequest,\n  ConnectEvent,\n  ConnectEventError,\n  ConnectRequest,\n  DeviceInfo,\n  RpcMethod,\n  RpcRequests,\n  WalletEvent,\n  WalletResponse,\n} from '@tonconnect/protocol';\nimport {\n  CONNECT_EVENT_ERROR_CODES,\n} from '@tonconnect/protocol';\n\nimport type { Connector } from '../../util/PostMessageConnector';\nimport { TONCONNECT_VERSION, tonConnectGetDeviceInfo } from '../../util/tonConnectEnvironment';\n\ndeclare global {\n  interface Window {\n    mytonwallet: {\n      tonconnect: TonConnect;\n    };\n  }\n}\n\ntype TonConnectCallback = (event: WalletEvent) => void;\ntype AppMethodMessage = AppRequest<keyof RpcRequests>;\ntype WalletMethodMessage = WalletResponse<RpcMethod>;\ntype RequestMethods = 'connect' | 'reconnect' | keyof RpcRequests | 'deactivate';\n\ninterface TonConnectBridge {\n  deviceInfo: DeviceInfo; // see Requests/Responses spec\n  protocolVersion: number; // max supported Ton Connect version (e.g. 2)\n  isWalletBrowser: boolean; // if the page is opened into wallet's browser\n  connect(protocolVersion: number, message: ConnectRequest): Promise<ConnectEvent>;\n\n  restoreConnection(): Promise<ConnectEvent>;\n\n  send(message: AppMethodMessage): Promise<WalletMethodMessage>;\n\n  listen(callback: TonConnectCallback): () => void;\n}\n\nclass TonConnect implements TonConnectBridge {\n  deviceInfo: DeviceInfo = tonConnectGetDeviceInfo();\n\n  protocolVersion = TONCONNECT_VERSION;\n\n  isWalletBrowser = false;\n\n  private callbacks: Array<(event: WalletEvent) => void>;\n\n  private lastGeneratedId: number = 0;\n\n  constructor(private apiConnector: Connector) {\n    this.callbacks = [];\n  }\n\n  async connect(protocolVersion: number, message: ConnectRequest): Promise<ConnectEvent> {\n    const id = ++this.lastGeneratedId;\n\n    if (protocolVersion > this.protocolVersion) {\n      return TonConnect.buildConnectError(\n        id,\n        'Unsupported protocol version',\n        CONNECT_EVENT_ERROR_CODES.BAD_REQUEST_ERROR,\n      );\n    }\n\n    const response = await this.request('connect', [message, id]);\n    if (response?.event === 'connect') {\n      response.payload.device = tonConnectGetDeviceInfo();\n\n      this.addEventListeners();\n    }\n\n    return this.emit<ConnectEvent>(response || TonConnect.buildConnectError(id));\n  }\n\n  async restoreConnection(): Promise<ConnectEvent> {\n    const id = ++this.lastGeneratedId;\n\n    const response = await this.request('reconnect', [id]);\n    if (response?.event === 'connect') {\n      response.payload.device = tonConnectGetDeviceInfo();\n\n      this.addEventListeners();\n    }\n\n    return this.emit<ConnectEvent>(response || TonConnect.buildConnectError(id));\n  }\n\n  async send(message: AppMethodMessage) {\n    const { id } = message;\n    const response = await this.request(message.method, [message]);\n\n    if (message.method === 'disconnect') {\n      this.removeEventListeners();\n    }\n\n    return response || {\n      error: {\n        code: 0,\n        message: 'Unknown error',\n      },\n      id,\n    };\n  }\n\n  listen(callback: (event: WalletEvent) => void): (() => void) {\n    this.callbacks.push(callback);\n    return () => {\n      this.callbacks = this.callbacks.filter((cb) => cb !== callback);\n    };\n  }\n\n  onDisconnect() {\n    const id = ++this.lastGeneratedId;\n\n    this.emit({\n      event: 'disconnect',\n      id,\n      payload: {},\n    });\n\n    this.removeEventListeners();\n  }\n\n  private request(name: RequestMethods, args: any[] = []) {\n    return this.apiConnector.request({ name: `tonConnect_${name}`, args });\n  }\n\n  private static buildConnectError(\n    id: number,\n    msg = 'Unknown error',\n    code?: CONNECT_EVENT_ERROR_CODES,\n  ): ConnectEventError {\n    return {\n      event: 'connect_error',\n      id,\n      payload: {\n        code: code || CONNECT_EVENT_ERROR_CODES.UNKNOWN_ERROR,\n        message: msg,\n      },\n    };\n  }\n\n  private emit<E extends WalletEvent>(event: E): E {\n    this.callbacks.forEach((cb) => cb(event));\n    return event;\n  }\n\n  private addEventListeners() {\n    this.removeEventListeners();\n\n    window.addEventListener('beforeunload', this.unloadEventListener);\n  }\n\n  private removeEventListeners() {\n    window.removeEventListener('beforeunload', this.unloadEventListener);\n  }\n\n  private unloadEventListener = () => {\n    void this.request('deactivate');\n  };\n\n  private destroy() {\n    this.removeEventListeners();\n    this.callbacks = [];\n    this.apiConnector.destroy();\n  }\n}\n\nexport function initTonConnect(apiConnector: Connector) {\n  const tonConnect = new TonConnect(apiConnector);\n\n  window.mytonwallet = {\n    tonconnect: tonConnect,\n  };\n\n  return tonConnect;\n}\n","export function createCallbackManager() {\n  const callbacks = new Set<AnyToVoidFunction>();\n\n  function addCallback(cb: AnyToVoidFunction) {\n    callbacks.add(cb);\n\n    return () => {\n      removeCallback(cb);\n    };\n  }\n\n  function removeCallback(cb: AnyToVoidFunction) {\n    callbacks.delete(cb);\n  }\n\n  function runCallbacks(...args: any[]) {\n    callbacks.forEach((callback) => {\n      callback(...args);\n    });\n  }\n\n  function hasCallbacks() {\n    return Boolean(callbacks.size);\n  }\n\n  return {\n    runCallbacks,\n    addCallback,\n    removeCallback,\n    hasCallbacks,\n  };\n}\n\nexport type CallbackManager = ReturnType<typeof createCallbackManager>;\n\nexport class EventEmitter {\n  private channels = new Map<string, CallbackManager>();\n\n  on(name: string, handler: AnyToVoidFunction) {\n    this.resolveChannel(name).addCallback(handler);\n    return this;\n  }\n\n  removeListener(name: string, handler: AnyToVoidFunction) {\n    this.resolveChannel(name).removeCallback(handler);\n    return this;\n  }\n\n  emit(name: string, ...args: any) {\n    this.resolveChannel(name).runCallbacks(...args);\n    return this;\n  }\n\n  private resolveChannel(name: string) {\n    let channel = this.channels.get(name);\n    if (!channel) {\n      channel = createCallbackManager();\n      this.channels.set(name, channel);\n    }\n\n    return channel;\n  }\n}\n","import { EventEmitter } from '../../util/callbacks';\nimport type { Connector } from '../../util/PostMessageConnector';\n\ndeclare global {\n  interface Window {\n    tonProtocolVersion: 1;\n    ton: TonProvider;\n    myTonWallet: TonProvider;\n  }\n}\n\ntype Methods =\n  'ton_getBalance'\n  | 'ton_requestAccounts'\n  | 'ton_requestWallets'\n  | 'ton_sendTransaction'\n  | 'ton_rawSign';\n\nexport class TonProvider extends EventEmitter {\n  public isMyTonWallet = true;\n\n  public isTonWallet = true; // Native extension legacy requirement\n\n  constructor(private apiConnector: Connector) {\n    super();\n  }\n\n  destroy() {\n    this.apiConnector.destroy();\n  }\n\n  // Prefixes is the native extension legacy requirement\n  send(name: Methods, args: any[] = []) {\n    return this.apiConnector.request({ name, args });\n  }\n}\n\nexport function initTonProvider(apiConnector: Connector) {\n  const tonProvider = new TonProvider(apiConnector);\n\n  if (window.ton) {\n    try {\n      window.ton.destroy();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.log(err);\n    }\n  }\n\n  window.tonProtocolVersion = 1;\n  window.ton = tonProvider;\n  window.myTonWallet = tonProvider;\n  window.dispatchEvent(new Event('tonready'));\n\n  return tonProvider;\n}\n","import type { ApiDappUpdate } from '../../api/types/dappUpdates';\n\nimport { callApi, initApi } from '../../api/providers/extension/connectorForPageScript';\nimport { doDeeplinkHook } from './deeplinkHook';\nimport { doTonMagic } from './tonMagic';\n\nimport { initTonConnect } from './TonConnect';\nimport { initTonProvider } from './TonProvider';\n\nconst siteOrigin = window.origin;\nconst apiConnector = initApi(onUpdate);\nconst tonProvider = initTonProvider(apiConnector);\nconst tonConnect = initTonConnect(apiConnector);\n\nfunction onUpdate(update: ApiDappUpdate) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { type, ...args } = update;\n\n  if (type === 'updateTonMagic') {\n    const { isEnabled } = update;\n    void doTonMagic(isEnabled, async () => {\n      await callApi('flushMemoryCache');\n      window.location.reload();\n    });\n    return;\n  }\n\n  if (type === 'updateDeeplinkHook') {\n    const { isEnabled } = update;\n    doDeeplinkHook(isEnabled);\n    return;\n  }\n\n  if (type === 'disconnectDapp') {\n    const { origin } = update;\n    if (origin === siteOrigin) {\n      tonConnect.onDisconnect();\n    }\n  }\n\n  // <legacy>\n  if (type === 'updateAccounts') {\n    const { accounts } = update;\n    tonProvider.emit('accountsChanged', accounts);\n    return;\n  }\n\n  tonProvider.emit(type, args);\n  // </legacy>\n}\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t570: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmytonwallet\"] = self[\"webpackChunkmytonwallet\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [780,412], () => (__webpack_require__(66801)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","DEBUG","process","TELEGRAM_WEB_URL","require","ConnectorClass","constructor","target","onUpdate","channel","targetOrigin","arguments","length","undefined","_defineProperty","Map","destroy","init","_len","args","Array","_key","this","postMessage","type","request","messageData","requestStates","requestStatesByCallback","messageId","Date","now","toString","Math","random","slice","payload","requestState","promise","Promise","resolve","reject","Object","assign","withCallback","callback","pop","set","catch","finally","delete","cancelCallback","progressCallback","isCanceled","get","onMessage","data","update","error","response","_requestState$callbac","call","callbackArgs","_data$error","Error","message","window","connector","callApi","methodName","name","console","logDebugError","originalOpenFn","open","isDeeplinkHookEnabled","clickHandler","e","_e$target","linkEl","closest","tryHandleDeeplink","href","preventDefault","patchedOpenFn","url","value","startsWith","URL","params","to","pathname","replace","amount","searchParams","text","comment","err","addBadge","html","badge","document","createElement","id","style","position","zIndex","top","background","width","height","lineHeight","textAlign","fontSize","fontFamily","color","innerHTML","body","prepend","CONNECT_EVENT_ERROR_CODES","CONNECT_ITEM_ERROR_CODES","SEND_TRANSACTION_ERROR_CODES","SIGN_DATA_ERROR_CODES","DISCONNECT_ERROR_CODES","CHAIN","tonConnectGetDeviceInfo","platform","getPlatform","appName","appVersion","maxProtocolVersion","features","maxMessages","userAgent","navigator","os","indexOf","test","TonConnect","apiConnector","callbacks","connect","protocolVersion","lastGeneratedId","buildConnectError","BAD_REQUEST_ERROR","event","device","addEventListeners","emit","restoreConnection","send","method","removeEventListeners","code","listen","push","filter","cb","onDisconnect","msg","UNKNOWN_ERROR","forEach","addEventListener","unloadEventListener","removeEventListener","EventEmitter","on","handler","resolveChannel","addCallback","removeListener","removeCallback","_len2","_key2","runCallbacks","channels","Set","add","hasCallbacks","Boolean","size","createCallbackManager","TonProvider","super","siteOrigin","origin","worker","handleMessage","_ref","createConnector","isTurnedOn","tonConnect","tonProvider","accounts","isEnabled","async","location","localRevision","querySelector","getAttribute","filesToInjectResponse","fetch","filesToInject","json","magicRevision","find","f","endsWith","assetCache","caches","cachedResponse","match","cachedText","responses","all","map","res","fileName","status","statusText","Response","blob","headers","put","clone","currentCssRevision","localStorage","setItem","getItem","removeItem","columnLeft","getElementById","columnCenter","remove","toggleMagicBadge","doTonMagic","reload","ton","log","tonProtocolVersion","myTonWallet","dispatchEvent","Event","initTonProvider","mytonwallet","tonconnect","initTonConnect","root","module","exports","nacl","util","validateBase64","s","TypeError","decodeUTF8","i","d","unescape","encodeURIComponent","b","Uint8Array","charCodeAt","encodeUTF8","arr","String","fromCharCode","decodeURIComponent","escape","join","atob","Buffer","from","encodeBase64","decodeBase64","prototype","len","btoa","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","r","o","obj","prop","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}